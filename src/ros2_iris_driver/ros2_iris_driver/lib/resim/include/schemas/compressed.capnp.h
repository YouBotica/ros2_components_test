// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: compressed.capnp

#pragma once

#include <capnp/generated-header-support.h>
#include <kj/windows-sanity.h>

#if CAPNP_VERSION != 9001
#error "Version mismatch between generated code and library headers.  You must use the same version of the Cap'n Proto compiler and library."
#endif

#include "roic705.capnp.h"
#include "semver.capnp.h"

CAPNP_BEGIN_HEADER

namespace capnp {
namespace schemas {

CAPNP_DECLARE_SCHEMA(cf999a7bf8df5fa9);

}  // namespace schemas
}  // namespace capnp

namespace ReSim {
namespace Schemas {

struct Compressed {
  Compressed() = delete;

  class Reader;
  class Builder;
  class Pipeline;

  struct _capnpPrivate {
    CAPNP_DECLARE_STRUCT_HEADER(cf999a7bf8df5fa9, 0, 4)
    #if !CAPNP_LITE
    static constexpr ::capnp::_::RawBrandedSchema const* brand() { return &schema->defaultBrand; }
    #endif  // !CAPNP_LITE
  };
};

// =======================================================================================

class Compressed::Reader {
public:
  typedef Compressed Reads;

  Reader() = default;
  inline explicit Reader(::capnp::_::StructReader base): _reader(base) {}

  inline ::capnp::MessageSize totalSize() const {
    return _reader.totalSize().asPublic();
  }

#if !CAPNP_LITE
  inline ::kj::StringTree toString() const {
    return ::capnp::_::structString(_reader, *_capnpPrivate::brand());
  }
#endif  // !CAPNP_LITE

  inline bool hasSemVer() const;
  inline  ::ReSim::Schemas::SemVer::Reader getSemVer() const;

  inline bool hasFrames() const;
  inline  ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Reader getFrames() const;

  inline bool hasDetectorConfig() const;
  inline  ::ReSim::Schemas::Roic705::Config::Reader getDetectorConfig() const;

  inline bool hasCompressedConfig() const;
  inline  ::ReSim::Schemas::Roic705::Config::Reader getCompressedConfig() const;

private:
  ::capnp::_::StructReader _reader;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::List;
  friend class ::capnp::MessageBuilder;
  friend class ::capnp::Orphanage;
};

class Compressed::Builder {
public:
  typedef Compressed Builds;

  Builder() = delete;  // Deleted to discourage incorrect usage.
                       // You can explicitly initialize to nullptr instead.
  inline Builder(decltype(nullptr)) {}
  inline explicit Builder(::capnp::_::StructBuilder base): _builder(base) {}
  inline operator Reader() const { return Reader(_builder.asReader()); }
  inline Reader asReader() const { return *this; }

  inline ::capnp::MessageSize totalSize() const { return asReader().totalSize(); }
#if !CAPNP_LITE
  inline ::kj::StringTree toString() const { return asReader().toString(); }
#endif  // !CAPNP_LITE

  inline bool hasSemVer();
  inline  ::ReSim::Schemas::SemVer::Builder getSemVer();
  inline void setSemVer( ::ReSim::Schemas::SemVer::Reader value);
  inline  ::ReSim::Schemas::SemVer::Builder initSemVer();
  inline void adoptSemVer(::capnp::Orphan< ::ReSim::Schemas::SemVer>&& value);
  inline ::capnp::Orphan< ::ReSim::Schemas::SemVer> disownSemVer();

  inline bool hasFrames();
  inline  ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Builder getFrames();
  inline void setFrames( ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Reader value);
  inline  ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Builder initFrames(unsigned int size);
  inline void adoptFrames(::capnp::Orphan< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>&& value);
  inline ::capnp::Orphan< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>> disownFrames();

  inline bool hasDetectorConfig();
  inline  ::ReSim::Schemas::Roic705::Config::Builder getDetectorConfig();
  inline void setDetectorConfig( ::ReSim::Schemas::Roic705::Config::Reader value);
  inline  ::ReSim::Schemas::Roic705::Config::Builder initDetectorConfig();
  inline void adoptDetectorConfig(::capnp::Orphan< ::ReSim::Schemas::Roic705::Config>&& value);
  inline ::capnp::Orphan< ::ReSim::Schemas::Roic705::Config> disownDetectorConfig();

  inline bool hasCompressedConfig();
  inline  ::ReSim::Schemas::Roic705::Config::Builder getCompressedConfig();
  inline void setCompressedConfig( ::ReSim::Schemas::Roic705::Config::Reader value);
  inline  ::ReSim::Schemas::Roic705::Config::Builder initCompressedConfig();
  inline void adoptCompressedConfig(::capnp::Orphan< ::ReSim::Schemas::Roic705::Config>&& value);
  inline ::capnp::Orphan< ::ReSim::Schemas::Roic705::Config> disownCompressedConfig();

private:
  ::capnp::_::StructBuilder _builder;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
  friend class ::capnp::Orphanage;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::_::PointerHelpers;
};

#if !CAPNP_LITE
class Compressed::Pipeline {
public:
  typedef Compressed Pipelines;

  inline Pipeline(decltype(nullptr)): _typeless(nullptr) {}
  inline explicit Pipeline(::capnp::AnyPointer::Pipeline&& typeless)
      : _typeless(kj::mv(typeless)) {}

  inline  ::ReSim::Schemas::SemVer::Pipeline getSemVer();
  inline  ::ReSim::Schemas::Roic705::Config::Pipeline getDetectorConfig();
  inline  ::ReSim::Schemas::Roic705::Config::Pipeline getCompressedConfig();
private:
  ::capnp::AnyPointer::Pipeline _typeless;
  friend class ::capnp::PipelineHook;
  template <typename, ::capnp::Kind>
  friend struct ::capnp::ToDynamic_;
};
#endif  // !CAPNP_LITE

// =======================================================================================

inline bool Compressed::Reader::hasSemVer() const {
  return !_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline bool Compressed::Builder::hasSemVer() {
  return !_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS).isNull();
}
inline  ::ReSim::Schemas::SemVer::Reader Compressed::Reader::getSemVer() const {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::SemVer>::get(_reader.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS),
        ::capnp::schemas::bp_cf999a7bf8df5fa9 + 54);
}
inline  ::ReSim::Schemas::SemVer::Builder Compressed::Builder::getSemVer() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::SemVer>::get(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS),
        ::capnp::schemas::bp_cf999a7bf8df5fa9 + 54);
}
#if !CAPNP_LITE
inline  ::ReSim::Schemas::SemVer::Pipeline Compressed::Pipeline::getSemVer() {
  return  ::ReSim::Schemas::SemVer::Pipeline(_typeless.getPointerField(0));
}
#endif  // !CAPNP_LITE
inline void Compressed::Builder::setSemVer( ::ReSim::Schemas::SemVer::Reader value) {
  ::capnp::_::PointerHelpers< ::ReSim::Schemas::SemVer>::set(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), value);
}
inline  ::ReSim::Schemas::SemVer::Builder Compressed::Builder::initSemVer() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::SemVer>::init(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}
inline void Compressed::Builder::adoptSemVer(
    ::capnp::Orphan< ::ReSim::Schemas::SemVer>&& value) {
  ::capnp::_::PointerHelpers< ::ReSim::Schemas::SemVer>::adopt(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ReSim::Schemas::SemVer> Compressed::Builder::disownSemVer() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::SemVer>::disown(_builder.getPointerField(
      ::capnp::bounded<0>() * ::capnp::POINTERS));
}

inline bool Compressed::Reader::hasFrames() const {
  return !_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline bool Compressed::Builder::hasFrames() {
  return !_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS).isNull();
}
inline  ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Reader Compressed::Reader::getFrames() const {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>::get(_reader.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline  ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Builder Compressed::Builder::getFrames() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>::get(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}
inline void Compressed::Builder::setFrames( ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Reader value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>::set(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), value);
}
inline  ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>::Builder Compressed::Builder::initFrames(unsigned int size) {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>::init(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), size);
}
inline void Compressed::Builder::adoptFrames(
    ::capnp::Orphan< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>&& value) {
  ::capnp::_::PointerHelpers< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>::adopt(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>> Compressed::Builder::disownFrames() {
  return ::capnp::_::PointerHelpers< ::capnp::List< ::ReSim::Schemas::Roic705::RoicFrame< ::capnp::Data>,  ::capnp::Kind::STRUCT>>::disown(_builder.getPointerField(
      ::capnp::bounded<1>() * ::capnp::POINTERS));
}

inline bool Compressed::Reader::hasDetectorConfig() const {
  return !_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline bool Compressed::Builder::hasDetectorConfig() {
  return !_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS).isNull();
}
inline  ::ReSim::Schemas::Roic705::Config::Reader Compressed::Reader::getDetectorConfig() const {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::get(_reader.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline  ::ReSim::Schemas::Roic705::Config::Builder Compressed::Builder::getDetectorConfig() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::get(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ReSim::Schemas::Roic705::Config::Pipeline Compressed::Pipeline::getDetectorConfig() {
  return  ::ReSim::Schemas::Roic705::Config::Pipeline(_typeless.getPointerField(2));
}
#endif  // !CAPNP_LITE
inline void Compressed::Builder::setDetectorConfig( ::ReSim::Schemas::Roic705::Config::Reader value) {
  ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::set(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), value);
}
inline  ::ReSim::Schemas::Roic705::Config::Builder Compressed::Builder::initDetectorConfig() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::init(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}
inline void Compressed::Builder::adoptDetectorConfig(
    ::capnp::Orphan< ::ReSim::Schemas::Roic705::Config>&& value) {
  ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::adopt(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ReSim::Schemas::Roic705::Config> Compressed::Builder::disownDetectorConfig() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::disown(_builder.getPointerField(
      ::capnp::bounded<2>() * ::capnp::POINTERS));
}

inline bool Compressed::Reader::hasCompressedConfig() const {
  return !_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline bool Compressed::Builder::hasCompressedConfig() {
  return !_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS).isNull();
}
inline  ::ReSim::Schemas::Roic705::Config::Reader Compressed::Reader::getCompressedConfig() const {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::get(_reader.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline  ::ReSim::Schemas::Roic705::Config::Builder Compressed::Builder::getCompressedConfig() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::get(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
#if !CAPNP_LITE
inline  ::ReSim::Schemas::Roic705::Config::Pipeline Compressed::Pipeline::getCompressedConfig() {
  return  ::ReSim::Schemas::Roic705::Config::Pipeline(_typeless.getPointerField(3));
}
#endif  // !CAPNP_LITE
inline void Compressed::Builder::setCompressedConfig( ::ReSim::Schemas::Roic705::Config::Reader value) {
  ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::set(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), value);
}
inline  ::ReSim::Schemas::Roic705::Config::Builder Compressed::Builder::initCompressedConfig() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::init(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}
inline void Compressed::Builder::adoptCompressedConfig(
    ::capnp::Orphan< ::ReSim::Schemas::Roic705::Config>&& value) {
  ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::adopt(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS), kj::mv(value));
}
inline ::capnp::Orphan< ::ReSim::Schemas::Roic705::Config> Compressed::Builder::disownCompressedConfig() {
  return ::capnp::_::PointerHelpers< ::ReSim::Schemas::Roic705::Config>::disown(_builder.getPointerField(
      ::capnp::bounded<3>() * ::capnp::POINTERS));
}

}  // namespace
}  // namespace

CAPNP_END_HEADER

